Let's have a look at Amazon Route 53.
So this is a highly available, scalable, and fully managed and authoritative DNS.
What does authoritative means?
That means that the customer you can update the DNS records, so you have full control over this DNS.
So the idea is that you have your clients and they want to access your EC2 Instance @example.com but right now your EC2 Instance only has a public IP.
Therefore what's going to happen is that we're going to write some DNS records into Amazon Route 53, into a hosted zone, and when the client is asking for example.com, then the Route 53 service will be able to say,
"Hey, you're looking for this IP 54.22.33.44," and then the clients will be able to connect directly into our EC2 Instance.
So Route 53 is also a domain registrar, so it will be able to register our own domain names there such as example.com, and we'll be doing this in the hands-on to allow us to get started with this service.

So we have the ability to check also the health

of the resources within Route 53,

we'll see this in the section.

And this is the only service in AWS

that will provide 100% availability SLA.

Finally, why is it called Route 53?

Well, 53 is a reference to the traditional DNS port

used by DNS services, hence the name.

So in Route 53 you're going to define a bunch of DNS records

and the records define how you want to route traffic

to a specific domain.

So each record is going to contain a lot of information

such as the domain or the subdomain names

such as example.com.

The record type, and we'll see what types of record

we have available to us, for example it could be A or AAAA.

Then the value, so the value of the record,

for example, 12.34.56.78

The routing policy,

which is how a Route 53 will respond to queries.

The TTL, which is the amount of time

the record is going to be cached at the DNS resolvers,

also called time to live.

And then we have a lot of different supported

DNS report types in Route 53.

So we have, the ones you must know is A, quadruple A,

CNAME, and NS, so we'll have a look at those

in the hands-on.

And the advanced records that you can set,

but we don't need to know from an exam perspective,

are all the ones I just wrote right here.

So let's learn about the important record types

we need to know from an exam perspective.

So the A record is very simple,

it's to map a host name into an IPv4 IP.

So this is when you have, for example, example.com

that will be directed into 1.2.3.4.

Okay, great.

Then we have quadruple A.

So this is the same idea as A,

but this time we're going to match our host name

into an IPv6 address.

Then we have a CNAME, which is used to map a host name

into another host name.

And then the target host name of course may be an A

or a quadruple A record.

You can not create CNAMES in Route 53

for the top nodes of a DNS namespace or the Zone Apex,

and we'll see this in a future lecture as well

to understand how that works.

For example, you can not create a CNAME for example.com,

but you can create a CNAME record for www.example.com.

So we'll see how we can deal with this in a future lecture.

And then finally, NS is for name servers of the hosted zone.

They are the DNS names or IP addresses of the servers

that can respond to the DNS queries for your hosted zone,

and this will control how traffic is routed to a domain.

So let's have a look at what are hosted zones.

So hosted zones are a container of records,

and they will define how to route traffic

to a domain and its subdomain.

So we have two types of hosted zone,

we have the public of zones and the private hosted zones.

So whenever you buy a public domain name,

for example mypublicdomain.com, this is a public domain name

and therefore we can create a public hosted zone

and these public zone can answer the query,

"Hey, what's is the IP, underlying IP of the domain name

application1.mypublicdomainname.com?"

But we also have private hosted zones.

And these are for domain names that you,

they are not publicly available, they're privates,

and only you within your own virtual private cloud or VPC

can resolve this URL.

For example, application1.company.internal.

You may have seen this if you're working

for a private company, they sometimes have URLs

that you can only access from within your corporate network,

that's because this is a private URL, this is a private

and behind the scenes there is a private DNS record.

So for any hosted zones you're going to create an AWS

you're going to pay 50 cents per month,

so this is not free to use Route 53.

And if you are to register a domain name,

just like I will in the hands-on,

this will cost you a minimum of a $12 per year.

So just so you know, this section is not free.

So public versus private hosted zones, just to understand.

So public hosted zone can be answered,

can answer queries from public clients.

So when you web browser, for example, and say,

"Hey, give me example.com," and then it returns an IP.

And on the other end we have the private hosted zone.

So this is from within your VPC they live.

And so they allow you to identify private resources

with private domain names.

So for example, we have one EC2 Instance

that we want to identify with webapp.example.internal,

we have another EC2 Instance that we want to identify

with api.example.internal, and then we have a database

we want to identify with database.example.internal.

In which case we're going to register a private hosted zone,

and then in case the first EC2 Instance

is requesting for api.example.internal,

then the private hosted zone has an answer for it,

which is the private IP 10.0.0.10.

Then the EC2 Instance will connect

to the second EC2 Instance,

which may need to connect to database.

So it will say, "Hey, what's database.example.internal?"

And the private hosted zone will say,

"Well, this is this private IP."

And then the EC2 Instance can connect directly

into the database.

So the public hosted zone and the private hosted zone

work the exact same way, but just the public hosted zone

allows anyone from the internet to query your records,

so this is for your public records, whereas a private hosted zone is only queried from within your private resources, for example your VPC.
